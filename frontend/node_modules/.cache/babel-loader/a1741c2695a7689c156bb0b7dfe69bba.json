{"ast":null,"code":"var _jsxFileName = \"/Users/nehajoisher/Desktop/Test/frontend/src/screens/OrderScreen/orderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, ListGroup, Image, Card, Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../../components/Message';\nimport Loader from '../../components/Loader';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { getOrderDetails, payOrder } from '../../actions/orderAction';\nimport { ORDER_PAY_RESET } from '../../constants/orderConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderScreen = _ref => {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const orderId = match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const dispatch = useDispatch();\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = orderPay; //   const orderDeliver = useSelector((state) => state.orderDeliver)\n  //   const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; // var templateParams = {\n  //       email: order.user.email,\n  // };\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = num => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } //paypal payment gateway\n\n\n    const addPayPalScript = async () => {\n      // const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=ATYsgvZ0jJ8F6JnaoEow_SZ9fwKKUmyt6rfq7xEFgPwetuNcWObnf1qgFyHQcnUszMCWKk0xBkzRMCf_`;\n      script.async = true;\n\n      script.onload = () => {\n        setSdkReady(true);\n      };\n\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, order]);\n\n  const successPaymentHandler = paymentResult => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  }; //   const deliverHandler = () => {\n  //         dispatch(deliverOrder(order))\n  //   }\n  //email sending function \n\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        className: \"shipping shadow p-3 mb-5 bg-white rounded mt-4\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Order ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 32\n              }, this), \" \", order.orderID]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), \" \", order.user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `mailto:${order.user.email}`,\n                children: order.user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Address: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), order.shippingAddress.address, \", \", order.shippingAddress.city, ' ', order.shippingAddress.postalCode, \",\", ' ', order.shippingAddress.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Method: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), order.paymentMethod]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Paid on \", order.paidAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n              children: \"Order is empty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: order.orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 1,\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: item.image,\n                      alt: item.name,\n                      fluid: true,\n                      rounded: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/food/${item.food}`,\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: [item.qty, \" x $\", item.price, \" = $\", item.qty * item.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        className: \"summary mt-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Order Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"Rs.\", order.itemsPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Shipping\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"Rs.\", order.shippingPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"Rs.\", order.taxPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"Rs.\", order.totalPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), !order.isPaid && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [loadingPay && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 52\n              }, this), !sdkReady ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(PayPalButton, {\n                amount: order.itemsPrice,\n                onSuccess: successPaymentHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this) || /*#__PURE__*/_jsxDEV(Button, {\n                amount: order.itemsPrice,\n                onSuccess: successPaymentHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(OrderScreen, \"rrbNON/UYIqXGkQYibYFMzN82yw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","PayPalButton","Link","Row","Col","ListGroup","Image","Card","Button","Form","useDispatch","useSelector","Message","Loader","StripeCheckout","getOrderDetails","payOrder","ORDER_PAY_RESET","OrderScreen","match","history","orderId","params","id","sdkReady","setSdkReady","dispatch","orderDetails","state","order","loading","error","orderPay","loadingPay","success","successPay","userLogin","userInfo","addDecimals","num","Math","round","toFixed","itemsPrice","orderItems","reduce","acc","item","price","qty","push","addPayPalScript","script","document","createElement","type","src","async","onload","body","appendChild","isPaid","window","paypal","successPaymentHandler","paymentResult","console","log","orderID","user","name","email","shippingAddress","address","city","postalCode","country","paymentMethod","paidAt","length","map","index","image","food","shippingPrice","taxPrice","totalPrice"],"sources":["/Users/nehajoisher/Desktop/Test/frontend/src/screens/OrderScreen/orderScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../../components/Message'\nimport Loader from '../../components/Loader'\nimport StripeCheckout from 'react-stripe-checkout'\nimport { getOrderDetails, payOrder } from '../../actions/orderAction'\nimport { ORDER_PAY_RESET } from '../../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n    const orderId = match.params.id\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const orderDetails = useSelector((state) => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n    const orderPay = useSelector((state) => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    //   const orderDeliver = useSelector((state) => state.orderDeliver)\n    //   const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    // var templateParams = {\n    //       email: order.user.email,\n    // };\n\n\n\n\n    if (!loading) {\n        //   Calculate prices\n        const addDecimals = (num) => {\n            return (Math.round(num * 100) / 100).toFixed(2)\n        }\n\n        order.itemsPrice = addDecimals(\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n        )\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n        //paypal payment gateway\n        const addPayPalScript = async () => {\n            // const { data: clientId } = await axios.get('/api/config/paypal')\n            const script = document.createElement('script')\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=ATYsgvZ0jJ8F6JnaoEow_SZ9fwKKUmyt6rfq7xEFgPwetuNcWObnf1qgFyHQcnUszMCWKk0xBkzRMCf_`\n            script.async = true\n            script.onload = () => {\n                setSdkReady(true)\n            }\n            document.body.appendChild(script)\n        }\n\n        if (!order || successPay) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, orderId, successPay, order])\n\n    const successPaymentHandler = (paymentResult) => {\n        console.log(paymentResult)\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    //   const deliverHandler = () => {\n    //         dispatch(deliverOrder(order))\n    //   }\n\n    //email sending function \n\n\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n        <>\n            \n            <Row>\n                <Col md={8} className='shipping shadow p-3 mb-5 bg-white rounded mt-4'>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p><strong>Order ID:</strong> {order.orderID}</p>\n                            <p>\n                                <strong>Name: </strong> {order.user.name}\n                            </p>\n                            <p>\n                                <strong>Email: </strong>{' '}\n                                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                            </p>\n                            <p>\n                                <strong>Address: </strong>\n                                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                                {order.shippingAddress.postalCode},{' '}\n                                {order.shippingAddress.country}\n                            </p>\n                            {/* {order.isDelivered ? (\n                                                <Message variant='success'>\n                                                      Delivered on {order.deliveredAt}\n                                                </Message>\n                                          ) : (\n                                                <Message variant='danger'>Not Delivered</Message>\n                                          )} */}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? (\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\n                            ) : (\n                                <Message variant='danger'>Not Paid</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? (\n                                <Message>Order is empty</Message>\n                            ) : (\n                                <ListGroup variant='flush'>\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image\n                                                        src={item.image}\n                                                        alt={item.name}\n                                                        fluid\n                                                        rounded\n                                                    />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/food/${item.food}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4} className='summary mt-4'>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>Rs.{order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>Rs.{order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>Rs.{order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>Rs.{order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            {/* Payment via paypal and credit or debit card */}\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n                                    {!sdkReady ? (\n                                        <Loader />\n                                    ) : (\n\n                                        <PayPalButton\n                                            amount={order.itemsPrice}\n                                            onSuccess={successPaymentHandler}\n\n                                        />\n\n                                    ) || (\n                                        <Button\n                                            amount={order.itemsPrice}\n                                            onSuccess={successPaymentHandler}\n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n\n                            {/* {loadingDeliver && <Loader />}\n\n                                          {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                                <ListGroup.Item>\n                                                      <Button type='button' className='btn btn-block' onClick={deliverHandler}>\n                                                            Mark as delivered\n                                                      </Button>\n                                                </ListGroup.Item>\n                                          )} */}\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default OrderScreen"],"mappings":"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"},"metadata":{},"sourceType":"module"}