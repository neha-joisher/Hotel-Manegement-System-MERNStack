{"ast":null,"code":"import axios from 'axios';\nimport { TBOOKING_CREATE_REQUEST, TBOOKING_CREATE_SUCCESS, TBOOKING_CREATE_FAIL, TBOOKING_LIST_REQUEST, TBOOKING_LIST_SUCCESS, TBOOKING_LIST_FAIL } from '../constants/tableConstants';\nexport const creatTableBooking = (userid, userName, restaurantid, restaurantName, date, phoneNo, adults, childrens, time) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TBOOKING_CREATE_REQUEST\n    }); //   const {\n    //     userLogin: { userInfo },\n    //   } = getState()\n    //   const config = {\n    //     headers: {\n    //       Authorization: `Bearer ${userInfo.token}`,\n    //     },\n    //   }\n\n    const {\n      data\n    } = await axios.post(`/api/tableBooking`, {\n      userid,\n      userName,\n      restaurantid,\n      restaurantName,\n      date,\n      phoneNo,\n      adults,\n      childrens,\n      time\n    });\n    dispatch({\n      type: TBOOKING_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TBOOKING_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //   export const creatTableBooking = (reservationID, userName, restaurantName, date, phoneNo, adults, childrens, time) => async (dispatch, getState) => {\n//       try {\n//         dispatch({\n//           type: TBOOKING_CREATE_REQUEST,\n//         })\n//         const { data } = await axios.post(`/api/tableBooking`, {reservationID, userName, restaurantName, date, phoneNo, adults, childrens, time})\n//         dispatch({\n//           type: TBOOKING_CREATE_SUCCESS,\n//           payload: data,\n//         })\n//       } catch (error) {\n//         dispatch({\n//           type: TBOOKING_CREATE_FAIL,\n//           payload:\n//             error.response && error.response.data.message\n//               ? error.response.data.message\n//               : error.message,\n//         })\n//       }\n//     }\n\nexport const listBookings = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TBOOKING_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/tableBooking`, config);\n    dispatch({\n      type: TBOOKING_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TBOOKING_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","TBOOKING_CREATE_REQUEST","TBOOKING_CREATE_SUCCESS","TBOOKING_CREATE_FAIL","TBOOKING_LIST_REQUEST","TBOOKING_LIST_SUCCESS","TBOOKING_LIST_FAIL","creatTableBooking","userid","userName","restaurantid","restaurantName","date","phoneNo","adults","childrens","time","dispatch","getState","type","data","post","payload","error","response","message","listBookings","userLogin","userInfo","config","headers","Authorization","token","get"],"sources":["/Users/nehajoisher/Desktop/Test/frontend/src/actions/tableBookinAction.js"],"sourcesContent":["import axios from 'axios'\nimport {\n    TBOOKING_CREATE_REQUEST,\n    TBOOKING_CREATE_SUCCESS,\n    TBOOKING_CREATE_FAIL,\n    TBOOKING_LIST_REQUEST,\n    TBOOKING_LIST_SUCCESS,\n    TBOOKING_LIST_FAIL\n} from '../constants/tableConstants'\n\n\n\nexport const creatTableBooking = (userid,userName,restaurantid,restaurantName,date,phoneNo,adults,childrens,time) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: TBOOKING_CREATE_REQUEST,\n      })\n  \n    //   const {\n    //     userLogin: { userInfo },\n    //   } = getState()\n  \n    //   const config = {\n    //     headers: {\n    //       Authorization: `Bearer ${userInfo.token}`,\n    //     },\n    //   }\n  \n      const { data } = await axios.post(`/api/tableBooking`, {userid,userName,restaurantid,restaurantName,date,phoneNo,adults,childrens,time})\n  \n      dispatch({\n        type: TBOOKING_CREATE_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      dispatch({\n        type: TBOOKING_CREATE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      })\n    }\n  }\n\n//   export const creatTableBooking = (reservationID, userName, restaurantName, date, phoneNo, adults, childrens, time) => async (dispatch, getState) => {\n//       try {\n//         dispatch({\n//           type: TBOOKING_CREATE_REQUEST,\n//         })\n    \n//         const { data } = await axios.post(`/api/tableBooking`, {reservationID, userName, restaurantName, date, phoneNo, adults, childrens, time})\n    \n//         dispatch({\n//           type: TBOOKING_CREATE_SUCCESS,\n//           payload: data,\n//         })\n//       } catch (error) {\n//         dispatch({\n//           type: TBOOKING_CREATE_FAIL,\n//           payload:\n//             error.response && error.response.data.message\n//               ? error.response.data.message\n//               : error.message,\n//         })\n//       }\n//     }\n\n\n  export const listBookings = () => async (dispatch, getState) => {\n    try {\n          dispatch({\n                type:TBOOKING_LIST_REQUEST,\n          })\n\n          const {\n                userLogin: { userInfo },\n          } = getState()\n\n          const config = {\n                headers: {\n                      Authorization: `Bearer ${userInfo.token}`,\n                },\n          }\n\n          const { data } = await axios.get(`/api/tableBooking`, config)\n\n          dispatch({\n                type: TBOOKING_LIST_SUCCESS,\n                payload: data,\n          })\n    } catch (error) {\n          dispatch({\n                type: TBOOKING_LIST_FAIL,\n                payload:\n                      error.response && error.response.data.message\n                            ? error.response.data.message\n                            : error.message,\n          })\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,uBADJ,EAEIC,uBAFJ,EAGIC,oBAHJ,EAIIC,qBAJJ,EAKIC,qBALJ,EAMIC,kBANJ,QAOO,6BAPP;AAWA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,MAAD,EAAQC,QAAR,EAAiBC,YAAjB,EAA8BC,cAA9B,EAA6CC,IAA7C,EAAkDC,OAAlD,EAA0DC,MAA1D,EAAiEC,SAAjE,EAA2EC,IAA3E,KAAoF,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EAC/I,IAAI;IACFD,QAAQ,CAAC;MACPE,IAAI,EAAElB;IADC,CAAD,CAAR,CADE,CAKJ;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;;IAEE,MAAM;MAAEmB;IAAF,IAAW,MAAMpB,KAAK,CAACqB,IAAN,CAAY,mBAAZ,EAAgC;MAACb,MAAD;MAAQC,QAAR;MAAiBC,YAAjB;MAA8BC,cAA9B;MAA6CC,IAA7C;MAAkDC,OAAlD;MAA0DC,MAA1D;MAAiEC,SAAjE;MAA2EC;IAA3E,CAAhC,CAAvB;IAEAC,QAAQ,CAAC;MACPE,IAAI,EAAEjB,uBADC;MAEPoB,OAAO,EAAEF;IAFF,CAAD,CAAR;EAID,CArBD,CAqBE,OAAOG,KAAP,EAAc;IACdN,QAAQ,CAAC;MACPE,IAAI,EAAEhB,oBADC;MAEPmB,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;EAOD;AACF,CA/BI,C,CAiCP;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,OAAO,MAAMC,YAAY,GAAG,MAAM,OAAOT,QAAP,EAAiBC,QAAjB,KAA8B;EAC9D,IAAI;IACED,QAAQ,CAAC;MACHE,IAAI,EAACf;IADF,CAAD,CAAR;IAIA,MAAM;MACAuB,SAAS,EAAE;QAAEC;MAAF;IADX,IAEFV,QAAQ,EAFZ;IAIA,MAAMW,MAAM,GAAG;MACTC,OAAO,EAAE;QACHC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MADrC;IADA,CAAf;IAMA,MAAM;MAAEZ;IAAF,IAAW,MAAMpB,KAAK,CAACiC,GAAN,CAAW,mBAAX,EAA+BJ,MAA/B,CAAvB;IAEAZ,QAAQ,CAAC;MACHE,IAAI,EAAEd,qBADH;MAEHiB,OAAO,EAAEF;IAFN,CAAD,CAAR;EAIL,CArBD,CAqBE,OAAOG,KAAP,EAAc;IACVN,QAAQ,CAAC;MACHE,IAAI,EAAEb,kBADH;MAEHgB,OAAO,EACDC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACQF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAD5B,GAEQF,KAAK,CAACE;IALjB,CAAD,CAAR;EAOL;AACJ,CA/BQ"},"metadata":{},"sourceType":"module"}