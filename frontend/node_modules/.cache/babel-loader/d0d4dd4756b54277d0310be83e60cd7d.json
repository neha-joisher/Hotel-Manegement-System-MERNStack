{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from '../constants/userConstants'; //User & Admin Login\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password, isAdmin) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:6500/api/users/', {\n      name,\n      email,\n      password,\n      isAdmin\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","register","name","isAdmin"],"sources":["/Users/nehajoisher/Desktop/Test/frontend/src/actions/userAction.js"],"sourcesContent":["import axios from 'axios'\nimport { \n      USER_LOGIN_FAIL,\n      USER_LOGIN_REQUEST,\n      USER_LOGIN_SUCCESS,\n      USER_LOGOUT,\n      USER_DETAILS_FAIL,\n      USER_DETAILS_REQUEST,\n      USER_DETAILS_SUCCESS,\n      USER_REGISTER_REQUEST,\n      USER_REGISTER_SUCCESS,\n      USER_REGISTER_FAIL,\n      \n} from '../constants/userConstants'\n\n\n//User & Admin Login\nexport const login = (email, password) => async (dispatch) => {\n    try {\n          dispatch({\n                type: USER_LOGIN_REQUEST\n          })\n\n          const config = {\n                headers: {\n                      'Content-Type': 'application/json',\n                },\n          }\n\n          const { data } = await axios.post('/api/users/login', { email, password }, config)\n\n          dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n          })\n\n          localStorage.setItem('userInfo', JSON.stringify(data))\n\n\n    } catch (error) {\n\n          dispatch({\n                type: USER_LOGIN_FAIL,\n                payload:\n                      error.response && error.response.data.message\n                            ? error.response.data.message\n                            : error.message,\n          })\n\n    }\n}\n\nexport const logout = () => (dispatch) => {\n      localStorage.removeItem('userInfo')\n      localStorage.removeItem('cartItems')\n      localStorage.removeItem('shippingAddress')\n      localStorage.removeItem('paymentMethod')\n      dispatch({ type: USER_LOGOUT })\n  } \n  \n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n      try {\n            dispatch({\n                  type: USER_DETAILS_REQUEST,\n            })\n\n            const {\n                  userLogin: { userInfo },\n            } = getState()\n\n            const config = {\n                  headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${userInfo.token}`,\n                  },\n            }\n\n            const { data } = await axios.get(`/api/users/${id}`, config)\n\n            dispatch({\n                  type: USER_DETAILS_SUCCESS,\n                  payload: data,\n            })\n      } catch (error) {\n            dispatch({\n                  type: USER_DETAILS_FAIL,\n                  payload:\n                        error.response && error.response.data.message\n                              ? error.response.data.message\n                              : error.message,\n            })\n      }\n}\n\n\nexport const register = (name, email, password, isAdmin) => async (dispatch) => {\n      try {\n          dispatch({\n              type: USER_REGISTER_REQUEST\n          })\n  \n          const config = {\n              headers: {\n                  'Content-Type': 'application/json'\n              }\n          }\n  \n          const { data } = await axios.post('http://localhost:6500/api/users/', { name, email, password, isAdmin },\n              config\n          )\n  \n          dispatch({\n              type: USER_REGISTER_SUCCESS,\n              payload: data,\n          })\n  \n          dispatch({\n              type: USER_LOGIN_SUCCESS,\n              payload: data,\n          })\n  \n          localStorage.setItem('userInfo', JSON.stringify(data))\n      } catch (error) {\n          dispatch({\n              type: USER_REGISTER_FAIL,\n              payload:\n                  error.response && error.response.data.message\n                      ? error.response.data.message\n                      : error.message\n          })\n      }\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}