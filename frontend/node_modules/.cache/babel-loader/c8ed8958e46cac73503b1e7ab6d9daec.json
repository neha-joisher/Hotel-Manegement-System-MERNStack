{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL } from '../constants/orderConstants'; //creating an order\n\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //get order details\n\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //payment gateway\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listOrders","listMyOrders"],"sources":["/Users/nehajoisher/Desktop/INFO-6150-Web-Design-Final-Project-main/frontend/src/actions/orderAction.js"],"sourcesContent":["import axios from 'axios'\nimport {\n      ORDER_CREATE_REQUEST,\n      ORDER_CREATE_SUCCESS,\n      ORDER_CREATE_FAIL,\n      ORDER_DETAILS_REQUEST,\n      ORDER_DETAILS_SUCCESS,\n      ORDER_DETAILS_FAIL,\n      ORDER_PAY_REQUEST,\n      ORDER_PAY_SUCCESS,\n      ORDER_PAY_FAIL,\n      ORDER_LIST_REQUEST,\n      ORDER_LIST_SUCCESS,\n      ORDER_LIST_FAIL,\n      ORDER_LIST_MY_REQUEST,\n      ORDER_LIST_MY_SUCCESS,\n      ORDER_LIST_MY_FAIL\n} from '../constants/orderConstants'\n\n\n\n//creating an order\nexport const createOrder = (order) => async (dispatch, getState) => {\n      try {\n            dispatch({\n                  type: ORDER_CREATE_REQUEST,\n            })\n\n            const {\n                  userLogin: { userInfo },\n            } = getState()\n\n            const config = {\n                  headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${userInfo.token}`,\n                  },\n            }\n\n            const { data } = await axios.post(`/api/orders`, order, config)\n\n            dispatch({\n                  type: ORDER_CREATE_SUCCESS,\n                  payload: data,\n            })\n      } catch (error) {\n            dispatch({\n                  type: ORDER_CREATE_FAIL,\n                  payload:\n                        error.response && error.response.data.message\n                              ? error.response.data.message\n                              : error.message,\n            })\n      }\n}\n\n\n//get order details\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n      try {\n            dispatch({\n                  type: ORDER_DETAILS_REQUEST,\n            })\n\n            const {\n                  userLogin: { userInfo },\n            } = getState()\n\n            const config = {\n                  headers: {\n                        Authorization: `Bearer ${userInfo.token}`,\n                  },\n            }\n\n            const { data } = await axios.get(`/api/orders/${id}`, config)\n\n            dispatch({\n                  type: ORDER_DETAILS_SUCCESS,\n                  payload: data,\n            })\n      } catch (error) {\n            dispatch({\n                  type: ORDER_DETAILS_FAIL,\n                  payload:\n                        error.response && error.response.data.message\n                              ? error.response.data.message\n                              : error.message,\n            })\n      }\n}\n\n\n//payment gateway\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n      try {\n            dispatch({\n                  type: ORDER_PAY_REQUEST,\n            })\n\n            const {\n                  userLogin: { userInfo },\n            } = getState()\n\n            const config = {\n                  headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${userInfo.token}`,\n                  },\n            }\n\n            const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\n\n            dispatch({\n                  type: ORDER_PAY_SUCCESS,\n                  payload: data,\n            })\n      } catch (error) {\n            dispatch({\n                  type: ORDER_PAY_FAIL,\n                  payload:\n                        error.response && error.response.data.message\n                              ? error.response.data.message\n                              : error.message,\n            })\n      }\n}\n\n\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n      try {\n            dispatch({\n                  type: ORDER_LIST_REQUEST,\n            })\n\n            const {\n                  userLogin: { userInfo },\n            } = getState()\n\n            const config = {\n                  headers: {\n                        Authorization: `Bearer ${userInfo.token}`,\n                  },\n            }\n\n            const { data } = await axios.get(`/api/orders`, config)\n\n            dispatch({\n                  type: ORDER_LIST_SUCCESS,\n                  payload: data,\n            })\n      } catch (error) {\n            dispatch({\n                  type: ORDER_LIST_FAIL,\n                  payload:\n                        error.response && error.response.data.message\n                              ? error.response.data.message\n                              : error.message,\n            })\n      }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n      try {\n            dispatch({\n                  type: ORDER_LIST_MY_REQUEST,\n            })\n\n            const {\n                  userLogin: { userInfo },\n            } = getState()\n\n            const config = {\n                  headers: {\n                        Authorization: `Bearer ${userInfo.token}`,\n                  },\n            }\n\n            const { data } = await axios.get(`/api/orders/myorders`, config)\n\n            dispatch({\n                  type: ORDER_LIST_MY_SUCCESS,\n                  payload: data,\n            })\n      } catch (error) {\n            dispatch({\n                  type: ORDER_LIST_MY_FAIL,\n                  payload:\n                        error.response && error.response.data.message\n                              ? error.response.data.message\n                              : error.message,\n            })\n      }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}